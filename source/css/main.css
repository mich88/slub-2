/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

body {
  font-family: 'Lato', sans-serif;
  font-size: 14px;
  font-weight: 400;
  color: #666;
  line-height: 1.5; }

.italic {
  font-style: italic; }

.bold {
  font-weight: 700; }

.title {
  font-family: 'Great Vibes', cursive;
  font-size: 50px;
  font-weight: 400;
  color: #666;
  text-align: center; }

.px-wrap {
  overflow: hidden; }
  .px-wrap .bg {
    position: relative; }

img {
  width: 100%; }

.link {
  position: relative;
  font-size: 14px;
  color: #fa7d8e;
  text-decoration: none; }
  .link:before {
    content: " ";
    position: absolute;
    left: 0;
    bottom: 0;
    display: block;
    width: 0%;
    height: 1px;
    background-color: #fa7d8e;
    transition: width 0.3s; }
  .link:hover:before {
    width: 100%; }

section {
  padding-bottom: 40px; }

p {
  margin-bottom: 24px; }

.align_c {
  text-align: center; }

.align_r {
  text-align: right; }

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor; }

.icon-AlicjaMichal {
  font-size: 100px;
  color: #fff; }

.icon-Paint {
  max-height: 520px;
  font-size: 300px;
  color: #000; }

.icon-envelope {
  display: block;
  margin: 0 auto 20px;
  font-size: 32px;
  color: #666; }

.icon-flowers {
  display: block;
  margin: 0 auto;
  font-size: 150px;
  color: #fa7d8e; }
  .icon-flowers-r, .icon-flowers-l {
    font-size: 50px;
    color: #fff;
    vertical-align: middle; }

.icon-bands {
  display: block;
  margin: 0 auto;
  font-size: 100px;
  color: #fff; }

.wrap {
  max-width: 300px;
  margin-left: auto;
  margin-right: auto; }
  .wrap:after {
    content: " ";
    display: block;
    clear: both; }

header {
  position: relative;
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/banner-320.jpg") 50% 50% no-repeat;
  background-size: cover; }

nav {
  position: absolute;
  z-index: 100;
  top: 0;
  left: 0;
  right: 0;
  background-color: #fff;
  transition: top 0.3s 0.3s, background-color 0.3s 0s; }
  nav.sticky {
    position: fixed;
    top: -220px;
    background-color: #fff;
    transition: top 0.3s 0s, background-color 0.3s 0.3s; }
    nav.sticky.show {
      top: -20px; }
    nav.sticky .nav__item {
      height: 120px; }
    nav.sticky .nav__link {
      line-height: 120px;
      color: #fa7d8e; }
      nav.sticky .nav__link.logo .icon-AlicjaMichal {
        margin-top: 10px;
        font-size: 100px;
        color: #fa7d8e; }
  nav .nav__list {
    padding-left: 14px;
    text-align: center; }
  nav .nav__item {
    display: inline-block;
    margin: 0 20px;
    vertical-align: middle;
    transition: all 0.3s 0.3s; }
    nav .nav__item.logo {
      position: absolute;
      top: 0;
      left: 0; }
      nav .nav__item.logo__link {
        position: relative;
        display: block; }
        nav .nav__item.logo__link:before {
          display: block;
          top: 0;
          right: 0;
          width: 100%;
          height: 100%;
          background-color: transparent;
          transition: none; }
        nav .nav__item.logo__link .icon-AlicjaMichal {
          transition: all 0.3s 0.3s; }
  nav .nav__link {
    position: relative;
    text-decoration: none;
    font-size: 14px;
    color: #fa7d8e;
    transition: all 0.3s 0.3s; }
    nav .nav__link:before {
      content: " ";
      position: absolute;
      left: 0;
      bottom: 0;
      display: block;
      width: 0%;
      height: 1px;
      background-color: #fa7d8e;
      transition: width 0.3s; }
    nav .nav__link:hover:before {
      width: 100%; }

.hero {
  width: 300px;
  margin-left: auto;
  margin-right: auto;
  margin: 0 auto;
  padding: 0; }
  .hero:after {
    content: " ";
    display: block;
    clear: both; }
  .hero__txt {
    margin-bottom: 10px;
    font-size: 18px;
    color: #fff;
    text-align: center; }
    .hero__txt_big {
      padding-bottom: 30px;
      font-size: 14px;
      color: #fff;
      text-align: center; }
      .hero__txt_big span {
        display: inline-block;
        margin: 0 15px;
        vertical-align: middle; }

.counter {
  *zoom: 1;
  margin-bottom: 22px; }
  .counter:before, .counter:after {
    content: " ";
    display: table; }
  .counter:after {
    clear: both; }
  .counter__item {
    width: 66px;
    float: left;
    padding-top: 0;
    padding-bottom: 10px;
    border: 1px solid #fff;
    background-color: rgba(0, 0, 0, 0.5);
    text-align: center; }
    .counter__item:nth-child(4n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .counter__item:nth-child(4n + 2) {
      margin-left: 78px;
      margin-right: -100%;
      clear: none; }
    .counter__item:nth-child(4n + 3) {
      margin-left: 156px;
      margin-right: -100%;
      clear: none; }
    .counter__item:nth-child(4n + 4) {
      margin-left: 234px;
      margin-right: -100%;
      clear: none; }
  .counter__num {
    margin-bottom: 0;
    opacity: 0;
    font-family: 'Great Vibes', cursive;
    font-size: 40px;
    font-weight: 400;
    color: #fff;
    -webkit-animation-name: show-counter;
            animation-name: show-counter;
    -webkit-animation-duration: 0.6s;
            animation-duration: 0.6s;
    -webkit-animation-delay: 1.3s;
            animation-delay: 1.3s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards; }
  .counter__txt {
    margin-bottom: 0;
    font-size: 12px;
    color: #fff; }

@-webkit-keyframes show-counter {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes show-counter {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

.footnote {
  position: relative;
  font-size: 13px;
  line-height: 50px;
  color: #fff;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.5); }
  .footnote span {
    display: inline-block;
    margin-right: 5px; }

#intro {
  padding-bottom: 0; }
  #intro p {
    text-align: center; }

#engagement .title {
  margin-bottom: 0; }

.date {
  margin-bottom: 44px;
  font-size: 24px;
  text-align: center;
  color: #fa7d8e; }

.castle {
  position: relative; }
  .castle .link {
    position: absolute;
    right: 0;
    bottom: 0; }

#wedding {
  padding-bottom: 10px; }
  #wedding .title {
    margin-bottom: 0; }
  #wedding .info__box {
    padding-bottom: 20px; }

#map {
  margin-top: 60px;
  height: 450px; }

#rooms .info {
  margin-bottom: 20px; }
  #rooms .info__box {
    padding-bottom: 40px; }

.info {
  max-width: 300px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 64px; }
  .info:after {
    content: " ";
    display: block;
    clear: both; }
  .info_contact {
    margin-top: 80px;
    margin-bottom: 0; }
  .info__box {
    position: relative;
    margin-bottom: 40px; }
    .info__box_contact {
      text-align: center; }
  .info__img {
    margin-bottom: 20px; }
  .info__txt {
    margin-bottom: 20px;
    font-size: 20px;
    text-align: center; }
  .info__link {
    position: absolute;
    bottom: 0;
    right: 0; }
    .info__link_contact {
      display: inline-block;
      font-size: 20px; }

footer {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 15px 20px 10px;
  background-color: #666; }
  footer:after {
    content: " ";
    display: block;
    clear: both; }

.footer__box {
  width: 44.4444444444%;
  float: left; }
  .footer__box:nth-child(2n + 1) {
    margin-left: 0;
    margin-right: -100%;
    clear: both;
    margin-left: 0; }
  .footer__box:nth-child(2n + 2) {
    margin-left: 55.5555555556%;
    margin-right: -100%;
    clear: none; }
  .footer__box.align_c {
    position: absolute; }

.footer__txt {
  display: block;
  margin-top: 10px;
  margin-bottom: 0;
  font-size: 14px;
  color: #fff; }

.footer__link {
  color: #fff; }

.footer__icon {
  height: 34px;
  font-size: 120px;
  color: #fff; }

.wrap {
  max-width: 300px;
  margin-left: auto;
  margin-right: auto; }
  .wrap:after {
    content: " ";
    display: block;
    clear: both; }

header {
  padding-top: 150px;
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/banner-1200.jpg") 50% 50% no-repeat;
  background-size: cover; }

nav {
  padding-top: 20px;
  background-color: transparent; }
  nav .logo {
    position: absolute;
    left: 50%;
    margin-left: -50px;
    transition: all 0.3s 0.3s; }
    nav .logo .icon-AlicjaMichal {
      transition: all 0.3s 0.3s; }
    nav .logo .nav__link {
      color: #fa7d8e; }
  nav .nav__list {
    display: none;
    padding-left: 24px; }
  nav .nav__item {
    margin: 0 15px;
    height: 200px; }
    nav .nav__item.extra_r {
      margin-right: 220px; }
  nav .nav__link {
    line-height: 200px;
    color: #fff; }
  nav.sticky .logo {
    margin-left: -50px; }
    nav.sticky .logo .icon-AlicjaMichal {
      margin-top: 10px;
      font-size: 100px;
      color: #fa7d8e; }
  nav.sticky .nav__item.extra_r {
    margin-right: 120px; }

@media only screen and (min-width: 768px) {
  body {
    font-size: 20px;
    line-height: 1.2; }
  section {
    padding-bottom: 80px; }
  .title {
    font-size: 60px; }
  .icon-Paint {
    font-size: 708px; }
  .icon-flowers-r, .icon-flowers-l {
    font-size: 90px; }
  .wrap {
    max-width: 708px;
    margin-left: auto;
    margin-right: auto; }
    .wrap:after {
      content: " ";
      display: block;
      clear: both; }
  header {
    padding-top: 500px;
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../img/banner-1200.jpg") 50% 50% no-repeat;
    background-size: cover; }
  nav {
    padding-top: 20px;
    background-color: transparent; }
    nav .logo {
      position: absolute;
      left: 50%;
      margin-left: -100px;
      transition: all 0.3s 0.3s; }
      nav .logo .icon-AlicjaMichal {
        font-size: 200px;
        transition: all 0.3s 0.3s; }
      nav .logo .nav__link {
        color: #fa7d8e; }
    nav .nav__list {
      padding-left: 24px; }
    nav .nav__item {
      margin: 0 15px;
      height: 200px; }
      nav .nav__item.extra_r {
        margin-right: 220px; }
    nav .nav__link {
      line-height: 200px;
      color: #fff; }
    nav.sticky .logo {
      margin-left: -50px; }
      nav.sticky .logo .icon-AlicjaMichal {
        margin-top: 10px;
        font-size: 100px;
        color: #fa7d8e; }
    nav.sticky .nav__item.extra_r {
      margin-right: 120px; }
  #wedding .info__box {
    height: 440px; }
  .hero {
    width: 554px;
    margin-left: auto;
    margin-right: auto;
    margin: 0 auto;
    padding: 0; }
    .hero:after {
      content: " ";
      display: block;
      clear: both; }
    .hero__txt {
      margin-bottom: 10px;
      font-size: 18px;
      color: #fff;
      text-align: center; }
      .hero__txt_big {
        padding-bottom: 30px;
        font-size: 22px;
        color: #fff;
        text-align: center; }
        .hero__txt_big span {
          display: inline-block;
          margin: 0 15px;
          vertical-align: middle; }
  .counter {
    *zoom: 1;
    margin-bottom: 22px; }
    .counter:before, .counter:after {
      content: " ";
      display: table; }
    .counter:after {
      clear: both; }
    .counter__item {
      width: 116px;
      float: left;
      padding-top: 10px;
      padding-bottom: 15px;
      border: 1px solid #fff;
      background-color: rgba(0, 0, 0, 0.5);
      text-align: center; }
      .counter__item:nth-child(4n + 1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .counter__item:nth-child(4n + 2) {
        margin-left: 146px;
        margin-right: -100%;
        clear: none; }
      .counter__item:nth-child(4n + 3) {
        margin-left: 292px;
        margin-right: -100%;
        clear: none; }
      .counter__item:nth-child(4n + 4) {
        margin-left: 438px;
        margin-right: -100%;
        clear: none; }
    .counter__num {
      margin-bottom: 0;
      opacity: 0;
      font-family: 'Great Vibes', cursive;
      font-size: 60px;
      font-weight: 400;
      color: #fff;
      -webkit-animation-name: show-counter;
              animation-name: show-counter;
      -webkit-animation-duration: 0.6s;
              animation-duration: 0.6s;
      -webkit-animation-delay: 1.3s;
              animation-delay: 1.3s;
      -webkit-animation-fill-mode: forwards;
              animation-fill-mode: forwards; }
    .counter__txt {
      margin-bottom: 0;
      font-size: 16px;
      color: #fff; }
  .info {
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    margin-top: 64px;
    margin-bottom: 80px; }
    .info:after {
      content: " ";
      display: block;
      clear: both; }
    .info_contact {
      margin-top: 80px;
      margin-bottom: 0; }
    .info__row {
      width: 100%;
      float: right;
      margin-right: 0; }
    .info__box {
      width: 45.8333333333%;
      float: left;
      position: relative; }
      .info__box:nth-child(2n + 1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .info__box:nth-child(2n + 2) {
        margin-left: 54.1666666667%;
        margin-right: -100%;
        clear: none; }
      .info__box_contact {
        text-align: center; }
      .info__box_full {
        width: 100%;
        float: left; }
        .info__box_full:nth-child(1n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: none; }
    .info__img {
      margin-bottom: 20px; }
    .info__txt {
      margin-bottom: 20px;
      font-size: 20px;
      text-align: center; }
    .info__link {
      position: absolute;
      bottom: 0;
      right: 0; }
      .info__link_contact {
        display: inline-block;
        font-size: 20px; }
  footer {
    max-width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding: 15px 20px 10px;
    background-color: #666; }
    footer:after {
      content: " ";
      display: block;
      clear: both; }
  .footer__box {
    width: 32.2033898305%;
    float: left; }
    .footer__box:nth-child(3n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .footer__box:nth-child(3n + 2) {
      margin-left: 33.8983050847%;
      margin-right: -100%;
      clear: none; }
    .footer__box:nth-child(3n + 3) {
      margin-left: 67.7966101695%;
      margin-right: -100%;
      clear: none; }
  .footer__txt {
    display: block;
    margin-top: 10px;
    margin-bottom: 0;
    font-size: 14px;
    color: #fff; }
  .footer__link {
    color: #fff; }
  .footer__icon {
    height: 34px;
    font-size: 120px;
    color: #fff; } }

@media only screen and (min-width: 1024px) {
  .icon-Paint {
    font-size: 960px; }
  .wrap {
    max-width: 960px;
    margin-left: auto;
    margin-right: auto; }
    .wrap:after {
      content: " ";
      display: block;
      clear: both; }
  nav .nav__item {
    margin: 0 20px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
